{"version":3,"file":"static/js/regiter-page.aacf2466.chunk.js","mappings":"iRACA,EAA2B,+BAA3B,EAAiE,2BAAjE,EAAoG,4BAApG,EAAyI,6BAAzI,EAAgL,8BAAhL,EAAwN,8B,kBCMlNA,EAAY,qJAiBd,OAjBc,oCAChBC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,IACV,EAEFC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAI,EAAJA,KAAMK,EAAK,EAALA,MAChC,EAAKC,UAAS,UAAGN,EAAOK,GAC1B,EAAE,EAEFE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,IACjD,EAAC,EAuEA,OAvEA,8BAED,WACE,MAAkCU,KAAKb,MAA/BC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAErB,OACE,iCACE,gBAAKW,UAAWC,EAAe,SAC5BF,KAAKF,MAAMK,oBACV,SAAC,KAAS,CACRC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,OAIf,gBAAKV,UAAWC,EAAgB,UAC9B,kBACEU,SAAUZ,KAAKL,aACfM,UAAWC,EACXW,aAAa,MAAK,WAElB,kBAAOZ,UAAWC,EAAa,UAC7B,kBACEY,KAAK,OACL1B,KAAK,OACLK,MAAOL,EACP2B,YAAY,OACZC,SAAUhB,KAAKT,kBAInB,kBAAOU,UAAWC,EAAa,UAC7B,kBACEY,KAAK,QACL1B,KAAK,QACLK,MAAOJ,EACP0B,YAAY,QACZC,SAAUhB,KAAKT,kBAInB,kBAAOU,UAAWC,EAAa,UAC7B,kBACEY,KAAK,WACL1B,KAAK,WACLK,MAAOH,EACPyB,YAAY,WACZC,SAAUhB,KAAKT,kBAGnB,iBAAKU,UAAWC,EAAe,WAC7B,SAAC,KAAO,CAACe,GAAG,IAAG,UACb,mBAAQhB,UAAWC,EAAeY,KAAK,SAAQ,SAAC,YAKlD,mBAAQb,UAAWC,EAAeY,KAAK,SAAQ,SAAC,uBAQ5D,KAAC,EAxFe,CAASI,EAAAA,WA2FrBC,EAAqB,CACzBpB,WAAYqB,EAAAA,EAAAA,cAGd,GAAeC,EAAAA,EAAAA,IAAQ,KAAMF,EAA7B,CAAiDjC,E","sources":["webpack://react-homework-template/./src/components/RegisterPage/RegisterPage.module.css?7542","components/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"register\":\"RegisterPage_register__lJnQd\",\"form\":\"RegisterPage_form__QX+sr\",\"label\":\"RegisterPage_label__i1nkG\",\"button\":\"RegisterPage_button__wfagb\",\"buttons\":\"RegisterPage_buttons__+xd0X\",\"loading\":\"RegisterPage_loading__xpm7d\"};","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authOperations from 'redux/auth-operations';\nimport styles from './RegisterPage.module.css';\nimport { ThreeDots } from 'react-loader-spinner';\n\nclass RegisterPage extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <>\n        <div className={styles.loading}>\n          {this.props.isLoadingContacts && (\n            <ThreeDots\n              height=\"80\"\n              width=\"80\"\n              radius=\"9\"\n              color=\"skyblue\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          )}\n        </div>\n        <div className={styles.register}>\n          <form\n            onSubmit={this.handleSubmit}\n            className={styles.form}\n            autoComplete=\"off\"\n          >\n            <label className={styles.label}>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                placeholder=\"Name\"\n                onChange={this.handleChange}\n              />\n            </label>\n\n            <label className={styles.label}>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Email\"\n                onChange={this.handleChange}\n              />\n            </label>\n\n            <label className={styles.label}>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n              />\n            </label>\n            <div className={styles.buttons}>\n              <NavLink to=\"/\">\n                <button className={styles.button} type=\"button\">\n                  Home\n                </button>\n              </NavLink>\n\n              <button className={styles.button} type=\"submit\">\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.registerUser,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterPage);\n"],"names":["RegisterPage","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","styles","isLoadingContacts","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","onSubmit","autoComplete","type","placeholder","onChange","to","Component","mapDispatchToProps","authOperations","connect"],"sourceRoot":""}